// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.20.1
// source: lotterysvr/v1/lottery.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonRspInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	UserId uint32 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CommonRspInfo) Reset() {
	*x = CommonRspInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lotterysvr_v1_lottery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonRspInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonRspInfo) ProtoMessage() {}

func (x *CommonRspInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lotterysvr_v1_lottery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonRspInfo.ProtoReflect.Descriptor instead.
func (*CommonRspInfo) Descriptor() ([]byte, []int) {
	return file_lotterysvr_v1_lottery_proto_rawDescGZIP(), []int{0}
}

func (x *CommonRspInfo) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CommonRspInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CommonRspInfo) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type LotteryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Ip       string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *LotteryReq) Reset() {
	*x = LotteryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lotterysvr_v1_lottery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotteryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryReq) ProtoMessage() {}

func (x *LotteryReq) ProtoReflect() protoreflect.Message {
	mi := &file_lotterysvr_v1_lottery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryReq.ProtoReflect.Descriptor instead.
func (*LotteryReq) Descriptor() ([]byte, []int) {
	return file_lotterysvr_v1_lottery_proto_rawDescGZIP(), []int{1}
}

func (x *LotteryReq) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LotteryReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LotteryReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type LotteryPrizeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	PrizeNum      int32  `protobuf:"varint,3,opt,name=prize_num,json=prizeNum,proto3" json:"prize_num,omitempty"`
	LeftNum       int32  `protobuf:"varint,4,opt,name=left_num,json=leftNum,proto3" json:"left_num,omitempty"`
	PrizeCodeLow  int32  `protobuf:"varint,5,opt,name=prize_code_low,json=prizeCodeLow,proto3" json:"prize_code_low,omitempty"`
	PrizeCodeHigh int32  `protobuf:"varint,6,opt,name=prize_code_high,json=prizeCodeHigh,proto3" json:"prize_code_high,omitempty"`
	Img           string `protobuf:"bytes,7,opt,name=img,proto3" json:"img,omitempty"`
	DisplayOrder  uint32 `protobuf:"varint,8,opt,name=display_order,json=displayOrder,proto3" json:"display_order,omitempty"`
	PrizeType     uint32 `protobuf:"varint,9,opt,name=prize_type,json=prizeType,proto3" json:"prize_type,omitempty"`
	PrizeProfile  string `protobuf:"bytes,10,opt,name=prize_profile,json=prizeProfile,proto3" json:"prize_profile,omitempty"`
	CouponCode    string `protobuf:"bytes,11,opt,name=coupon_code,json=couponCode,proto3" json:"coupon_code,omitempty"` // 如果中奖奖品是优惠券，这个字段位优惠券编码，否则为空
}

func (x *LotteryPrizeInfo) Reset() {
	*x = LotteryPrizeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lotterysvr_v1_lottery_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotteryPrizeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryPrizeInfo) ProtoMessage() {}

func (x *LotteryPrizeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lotterysvr_v1_lottery_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryPrizeInfo.ProtoReflect.Descriptor instead.
func (*LotteryPrizeInfo) Descriptor() ([]byte, []int) {
	return file_lotterysvr_v1_lottery_proto_rawDescGZIP(), []int{2}
}

func (x *LotteryPrizeInfo) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LotteryPrizeInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LotteryPrizeInfo) GetPrizeNum() int32 {
	if x != nil {
		return x.PrizeNum
	}
	return 0
}

func (x *LotteryPrizeInfo) GetLeftNum() int32 {
	if x != nil {
		return x.LeftNum
	}
	return 0
}

func (x *LotteryPrizeInfo) GetPrizeCodeLow() int32 {
	if x != nil {
		return x.PrizeCodeLow
	}
	return 0
}

func (x *LotteryPrizeInfo) GetPrizeCodeHigh() int32 {
	if x != nil {
		return x.PrizeCodeHigh
	}
	return 0
}

func (x *LotteryPrizeInfo) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *LotteryPrizeInfo) GetDisplayOrder() uint32 {
	if x != nil {
		return x.DisplayOrder
	}
	return 0
}

func (x *LotteryPrizeInfo) GetPrizeType() uint32 {
	if x != nil {
		return x.PrizeType
	}
	return 0
}

func (x *LotteryPrizeInfo) GetPrizeProfile() string {
	if x != nil {
		return x.PrizeProfile
	}
	return ""
}

func (x *LotteryPrizeInfo) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

type LotteryRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonRsp *CommonRspInfo    `protobuf:"bytes,1,opt,name=common_rsp,json=commonRsp,proto3" json:"common_rsp,omitempty"`
	PrizeInfo *LotteryPrizeInfo `protobuf:"bytes,2,opt,name=prize_info,json=prizeInfo,proto3" json:"prize_info,omitempty"`
}

func (x *LotteryRsp) Reset() {
	*x = LotteryRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lotterysvr_v1_lottery_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LotteryRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryRsp) ProtoMessage() {}

func (x *LotteryRsp) ProtoReflect() protoreflect.Message {
	mi := &file_lotterysvr_v1_lottery_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryRsp.ProtoReflect.Descriptor instead.
func (*LotteryRsp) Descriptor() ([]byte, []int) {
	return file_lotterysvr_v1_lottery_proto_rawDescGZIP(), []int{3}
}

func (x *LotteryRsp) GetCommonRsp() *CommonRspInfo {
	if x != nil {
		return x.CommonRsp
	}
	return nil
}

func (x *LotteryRsp) GetPrizeInfo() *LotteryPrizeInfo {
	if x != nil {
		return x.PrizeInfo
	}
	return nil
}

var File_lotterysvr_v1_lottery_proto protoreflect.FileDescriptor

var file_lotterysvr_v1_lottery_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x73, 0x76, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x61,
	0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4e, 0x0a, 0x0d, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x0a, 0x4c,
	0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22,
	0xda, 0x02, 0x0a, 0x10, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x50, 0x72, 0x69, 0x7a, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72,
	0x69, 0x7a, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x72, 0x69, 0x7a, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x65, 0x66, 0x74, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x65, 0x66, 0x74, 0x4e,
	0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x7a, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x6c, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x7a,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x7a,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x7a, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x69, 0x67, 0x68,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69,
	0x6d, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x7a, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x69,
	0x7a, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x7a, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x72, 0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x8b, 0x01, 0x0a,
	0x0a, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x72, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x72, 0x69,
	0x7a, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x50, 0x72, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x70, 0x72, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x66, 0x0a, 0x07, 0x4c, 0x6f,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x5b, 0x0a, 0x09, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x56, 0x31, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x73, 0x70, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x10, 0x22, 0x0b, 0x2f, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x79, 0x73, 0x76, 0x72, 0x3a,
	0x01, 0x2a, 0x42, 0x56, 0x0a, 0x11, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x73, 0x76, 0x72, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x6d, 0x68, 0x75,
	0x62, 0x2f, 0x62, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x6d, 0x2f, 0x6c, 0x6f, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x73, 0x76, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x73, 0x76, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_lotterysvr_v1_lottery_proto_rawDescOnce sync.Once
	file_lotterysvr_v1_lottery_proto_rawDescData = file_lotterysvr_v1_lottery_proto_rawDesc
)

func file_lotterysvr_v1_lottery_proto_rawDescGZIP() []byte {
	file_lotterysvr_v1_lottery_proto_rawDescOnce.Do(func() {
		file_lotterysvr_v1_lottery_proto_rawDescData = protoimpl.X.CompressGZIP(file_lotterysvr_v1_lottery_proto_rawDescData)
	})
	return file_lotterysvr_v1_lottery_proto_rawDescData
}

var file_lotterysvr_v1_lottery_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_lotterysvr_v1_lottery_proto_goTypes = []interface{}{
	(*CommonRspInfo)(nil),    // 0: api.lottery.v1.CommonRspInfo
	(*LotteryReq)(nil),       // 1: api.lottery.v1.LotteryReq
	(*LotteryPrizeInfo)(nil), // 2: api.lottery.v1.LotteryPrizeInfo
	(*LotteryRsp)(nil),       // 3: api.lottery.v1.LotteryRsp
}
var file_lotterysvr_v1_lottery_proto_depIdxs = []int32{
	0, // 0: api.lottery.v1.LotteryRsp.common_rsp:type_name -> api.lottery.v1.CommonRspInfo
	2, // 1: api.lottery.v1.LotteryRsp.prize_info:type_name -> api.lottery.v1.LotteryPrizeInfo
	1, // 2: api.lottery.v1.Lottery.LotteryV1:input_type -> api.lottery.v1.LotteryReq
	3, // 3: api.lottery.v1.Lottery.LotteryV1:output_type -> api.lottery.v1.LotteryRsp
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_lotterysvr_v1_lottery_proto_init() }
func file_lotterysvr_v1_lottery_proto_init() {
	if File_lotterysvr_v1_lottery_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lotterysvr_v1_lottery_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonRspInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lotterysvr_v1_lottery_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotteryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lotterysvr_v1_lottery_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotteryPrizeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lotterysvr_v1_lottery_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LotteryRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lotterysvr_v1_lottery_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lotterysvr_v1_lottery_proto_goTypes,
		DependencyIndexes: file_lotterysvr_v1_lottery_proto_depIdxs,
		MessageInfos:      file_lotterysvr_v1_lottery_proto_msgTypes,
	}.Build()
	File_lotterysvr_v1_lottery_proto = out.File
	file_lotterysvr_v1_lottery_proto_rawDesc = nil
	file_lotterysvr_v1_lottery_proto_goTypes = nil
	file_lotterysvr_v1_lottery_proto_depIdxs = nil
}
